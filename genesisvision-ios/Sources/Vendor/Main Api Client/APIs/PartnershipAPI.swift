//
// PartnershipAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class PartnershipAPI {
    /**
     Export rewards history.
     - parameter dateFrom: (query)  (optional)     - parameter dateTo: (query)  (optional)     - parameter skip: (query)  (optional)     - parameter take: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func exportHistory(dateFrom: Date? = nil, dateTo: Date? = nil, skip: Int? = nil, take: Int? = nil, completion: @escaping ((_ data: Data?,_ error: Error?) -> Void)) {
        exportHistoryWithRequestBuilder(dateFrom: dateFrom, dateTo: dateTo, skip: skip, take: take).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Export rewards history.
     - GET /v2.0/partnership/rewards/history/export
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example=""}]
     - parameter dateFrom: (query)  (optional)     - parameter dateTo: (query)  (optional)     - parameter skip: (query)  (optional)     - parameter take: (query)  (optional)

     - returns: RequestBuilder<Data> 
     */
    open class func exportHistoryWithRequestBuilder(dateFrom: Date? = nil, dateTo: Date? = nil, skip: Int? = nil, take: Int? = nil) -> RequestBuilder<Data> {
        let path = "/v2.0/partnership/rewards/history/export"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "DateFrom": dateFrom?.encodeToJSON(), 
                        "DateTo": dateTo?.encodeToJSON(), 
                        "Skip": skip?.encodeToJSON(), 
                        "Take": take?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<Data>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get partnership details.
     - parameter currency: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDetails(currency: Currency? = nil, completion: @escaping ((_ data: PartnershipDetails?,_ error: Error?) -> Void)) {
        getDetailsWithRequestBuilder(currency: currency).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get partnership details.
     - GET /v2.0/partnership/details
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "totalAmount" : 1.4658129805029452,
  "totalReferralsL1" : 0,
  "totalReferralsL2" : 6
}}]
     - parameter currency: (query)  (optional)

     - returns: RequestBuilder<PartnershipDetails> 
     */
    open class func getDetailsWithRequestBuilder(currency: Currency? = nil) -> RequestBuilder<PartnershipDetails> {
        let path = "/v2.0/partnership/details"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "currency": currency
        ])

        let requestBuilder: RequestBuilder<PartnershipDetails>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get agent friends (referrals and second level referrals).
     - parameter dateFrom: (query)  (optional)     - parameter dateTo: (query)  (optional)     - parameter skip: (query)  (optional)     - parameter take: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getReferrals(dateFrom: Date? = nil, dateTo: Date? = nil, skip: Int? = nil, take: Int? = nil, completion: @escaping ((_ data: ReferralFriendItemsViewModel?,_ error: Error?) -> Void)) {
        getReferralsWithRequestBuilder(dateFrom: dateFrom, dateTo: dateTo, skip: skip, take: take).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get agent friends (referrals and second level referrals).
     - GET /v2.0/partnership/referrals
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "total" : 0,
  "items" : [ {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "emailMask" : "emailMask"
  }, {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "emailMask" : "emailMask"
  } ]
}}]
     - parameter dateFrom: (query)  (optional)     - parameter dateTo: (query)  (optional)     - parameter skip: (query)  (optional)     - parameter take: (query)  (optional)

     - returns: RequestBuilder<ReferralFriendItemsViewModel> 
     */
    open class func getReferralsWithRequestBuilder(dateFrom: Date? = nil, dateTo: Date? = nil, skip: Int? = nil, take: Int? = nil) -> RequestBuilder<ReferralFriendItemsViewModel> {
        let path = "/v2.0/partnership/referrals"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "DateFrom": dateFrom?.encodeToJSON(), 
                        "DateTo": dateTo?.encodeToJSON(), 
                        "Skip": skip?.encodeToJSON(), 
                        "Take": take?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<ReferralFriendItemsViewModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get history of agent rewards.
     - parameter dateFrom: (query)  (optional)     - parameter dateTo: (query)  (optional)     - parameter skip: (query)  (optional)     - parameter take: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getRewardsHistory(dateFrom: Date? = nil, dateTo: Date? = nil, skip: Int? = nil, take: Int? = nil, completion: @escaping ((_ data: RewardDetailsItemsViewModel?,_ error: Error?) -> Void)) {
        getRewardsHistoryWithRequestBuilder(dateFrom: dateFrom, dateTo: dateTo, skip: skip, take: take).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get history of agent rewards.
     - GET /v2.0/partnership/rewards/history
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "total" : 6,
  "items" : [ {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "amount" : 0.8008281904610115,
    "currency" : "Undefined"
  }, {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "amount" : 0.8008281904610115,
    "currency" : "Undefined"
  } ]
}}]
     - parameter dateFrom: (query)  (optional)     - parameter dateTo: (query)  (optional)     - parameter skip: (query)  (optional)     - parameter take: (query)  (optional)

     - returns: RequestBuilder<RewardDetailsItemsViewModel> 
     */
    open class func getRewardsHistoryWithRequestBuilder(dateFrom: Date? = nil, dateTo: Date? = nil, skip: Int? = nil, take: Int? = nil) -> RequestBuilder<RewardDetailsItemsViewModel> {
        let path = "/v2.0/partnership/rewards/history"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "DateFrom": dateFrom?.encodeToJSON(), 
                        "DateTo": dateTo?.encodeToJSON(), 
                        "Skip": skip?.encodeToJSON(), 
                        "Take": take?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<RewardDetailsItemsViewModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
