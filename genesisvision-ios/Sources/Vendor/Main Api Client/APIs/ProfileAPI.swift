//
// ProfileAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class ProfileAPI {
    /**
     Get full profile
     
     - parameter authorization: (header) JWT access token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getProfileFull(authorization: String, completion: @escaping ((_ data: ProfileFullViewModel?,_ error: Error?) -> Void)) {
        getProfileFullWithRequestBuilder(authorization: authorization).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get full profile
     - GET /v2.0/profile
     - examples: [{contentType=application/json, example={
  "birthday" : "2000-01-23T04:56:07.000+00:00",
  "lastName" : "lastName",
  "country" : "country",
  "address" : "address",
  "gender" : true,
  "city" : "city",
  "verificationStatus" : { },
  "isPublicInvestor" : true,
  "citizenship" : "citizenship",
  "about" : "about",
  "index" : "index",
  "avatar" : "avatar",
  "userName" : "userName",
  "phoneNumberConfirmed" : true,
  "firstName" : "firstName",
  "phone" : "phone",
  "middleName" : "middleName",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "refUrl" : "refUrl",
  "email" : "email"
}}]
     
     - parameter authorization: (header) JWT access token 

     - returns: RequestBuilder<ProfileFullViewModel> 
     */
    open class func getProfileFullWithRequestBuilder(authorization: String) -> RequestBuilder<ProfileFullViewModel> {
        let path = "/v2.0/profile"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<ProfileFullViewModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Get header profile
     
     - parameter authorization: (header) JWT access token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getProfileHeader(authorization: String, completion: @escaping ((_ data: ProfileHeaderViewModel?,_ error: Error?) -> Void)) {
        getProfileHeaderWithRequestBuilder(authorization: authorization).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get header profile
     - GET /v2.0/profile/header
     - examples: [{contentType=application/json, example={
  "isPublicInvestor" : true,
  "isUserNameFilled" : true,
  "notificationsCount" : 0,
  "avatar" : "avatar",
  "isNewUser" : true,
  "url" : "url",
  "isForexAllowed" : true,
  "isTwoFactorEnabled" : true,
  "countryCode" : "countryCode",
  "isKycConfirmed" : true,
  "name" : "name",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "email" : "email"
}}]
     
     - parameter authorization: (header) JWT access token 

     - returns: RequestBuilder<ProfileHeaderViewModel> 
     */
    open class func getProfileHeaderWithRequestBuilder(authorization: String) -> RequestBuilder<ProfileHeaderViewModel> {
        let path = "/v2.0/profile/header"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<ProfileHeaderViewModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Get social links
     
     - parameter authorization: (header) JWT access token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getSocialLinks(authorization: String, completion: @escaping ((_ data: SocialLinksViewModel?,_ error: Error?) -> Void)) {
        getSocialLinksWithRequestBuilder(authorization: authorization).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get social links
     - GET /v2.0/profile/sociallinks
     - examples: [{contentType=application/json, example={
  "socialLinks" : [ {
    "name" : "name",
    "logo" : "logo",
    "type" : { },
    "value" : "value",
    "url" : "url"
  }, {
    "name" : "name",
    "logo" : "logo",
    "type" : { },
    "value" : "value",
    "url" : "url"
  } ]
}}]
     
     - parameter authorization: (header) JWT access token 

     - returns: RequestBuilder<SocialLinksViewModel> 
     */
    open class func getSocialLinksWithRequestBuilder(authorization: String) -> RequestBuilder<SocialLinksViewModel> {
        let path = "/v2.0/profile/sociallinks"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<SocialLinksViewModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter authorization: (header) JWT access token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVerificationToken(authorization: String, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        getVerificationTokenWithRequestBuilder(authorization: authorization).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /v2.0/profile/verification/token
     - examples: [{contentType=application/json, example=""}]
     
     - parameter authorization: (header) JWT access token 

     - returns: RequestBuilder<String> 
     */
    open class func getVerificationTokenWithRequestBuilder(authorization: String) -> RequestBuilder<String> {
        let path = "/v2.0/profile/verification/token"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Remove avatar
     
     - parameter authorization: (header) JWT access token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func removeAvatar(authorization: String, completion: @escaping ((_ error: Error?) -> Void)) {
        removeAvatarWithRequestBuilder(authorization: authorization).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Remove avatar
     - POST /v2.0/profile/avatar/remove
     
     - parameter authorization: (header) JWT access token 

     - returns: RequestBuilder<Void> 
     */
    open class func removeAvatarWithRequestBuilder(authorization: String) -> RequestBuilder<Void> {
        let path = "/v2.0/profile/avatar/remove"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter authorization: (header) JWT access token 
     - parameter token: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func removeFcmToken(authorization: String, token: FcmTokenViewModel? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        removeFcmTokenWithRequestBuilder(authorization: authorization, token: token).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     - POST /v2.0/profile/push/token/remove
     
     - parameter authorization: (header) JWT access token 
     - parameter token: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func removeFcmTokenWithRequestBuilder(authorization: String, token: FcmTokenViewModel? = nil) -> RequestBuilder<Void> {
        let path = "/v2.0/profile/push/token/remove"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: token)

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**
     Disable public investor profile
     
     - parameter authorization: (header) JWT access token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func switchPublicInvestorOff(authorization: String, completion: @escaping ((_ error: Error?) -> Void)) {
        switchPublicInvestorOffWithRequestBuilder(authorization: authorization).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Disable public investor profile
     - POST /v2.0/profile/investor/public/off
     
     - parameter authorization: (header) JWT access token 

     - returns: RequestBuilder<Void> 
     */
    open class func switchPublicInvestorOffWithRequestBuilder(authorization: String) -> RequestBuilder<Void> {
        let path = "/v2.0/profile/investor/public/off"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Enable public investor profile
     
     - parameter authorization: (header) JWT access token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func switchPublicInvestorOn(authorization: String, completion: @escaping ((_ error: Error?) -> Void)) {
        switchPublicInvestorOnWithRequestBuilder(authorization: authorization).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Enable public investor profile
     - POST /v2.0/profile/investor/public/on
     
     - parameter authorization: (header) JWT access token 

     - returns: RequestBuilder<Void> 
     */
    open class func switchPublicInvestorOnWithRequestBuilder(authorization: String) -> RequestBuilder<Void> {
        let path = "/v2.0/profile/investor/public/on"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Add or update all social links
     
     - parameter authorization: (header) JWT access token 
     - parameter model: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateAllSocialLinks(authorization: String, model: UpdateSocialLinksViewModel? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        updateAllSocialLinksWithRequestBuilder(authorization: authorization, model: model).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Add or update all social links
     - POST /v2.0/profile/sociallinks/all/update
     
     - parameter authorization: (header) JWT access token 
     - parameter model: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func updateAllSocialLinksWithRequestBuilder(authorization: String, model: UpdateSocialLinksViewModel? = nil) -> RequestBuilder<Void> {
        let path = "/v2.0/profile/sociallinks/all/update"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: model)

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**
     Update avatar
     
     - parameter fileId: (path)  
     - parameter authorization: (header) JWT access token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateAvatar(fileId: String, authorization: String, completion: @escaping ((_ error: Error?) -> Void)) {
        updateAvatarWithRequestBuilder(fileId: fileId, authorization: authorization).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Update avatar
     - POST /v2.0/profile/avatar/update/{fileId}
     
     - parameter fileId: (path)  
     - parameter authorization: (header) JWT access token 

     - returns: RequestBuilder<Void> 
     */
    open class func updateAvatarWithRequestBuilder(fileId: String, authorization: String) -> RequestBuilder<Void> {
        var path = "/v2.0/profile/avatar/update/{fileId}"
        path = path.replacingOccurrences(of: "{fileId}", with: "\(fileId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter authorization: (header) JWT access token 
     - parameter token: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateFcmToken(authorization: String, token: FcmTokenViewModel? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        updateFcmTokenWithRequestBuilder(authorization: authorization, token: token).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     - POST /v2.0/profile/push/token
     
     - parameter authorization: (header) JWT access token 
     - parameter token: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func updateFcmTokenWithRequestBuilder(authorization: String, token: FcmTokenViewModel? = nil) -> RequestBuilder<Void> {
        let path = "/v2.0/profile/push/token"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: token)

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**
     Update user personal details
     
     - parameter authorization: (header) JWT access token 
     - parameter model: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updatePersonalDetails(authorization: String, model: UpdatePersonalDetailViewModel? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        updatePersonalDetailsWithRequestBuilder(authorization: authorization, model: model).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Update user personal details
     - POST /v2.0/profile/personal/update
     
     - parameter authorization: (header) JWT access token 
     - parameter model: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func updatePersonalDetailsWithRequestBuilder(authorization: String, model: UpdatePersonalDetailViewModel? = nil) -> RequestBuilder<Void> {
        let path = "/v2.0/profile/personal/update"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: model)

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**
     Update profile
     
     - parameter authorization: (header) JWT access token 
     - parameter model: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateProfile(authorization: String, model: UpdateProfileViewModel? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        updateProfileWithRequestBuilder(authorization: authorization, model: model).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Update profile
     - POST /v2.0/profile/update
     
     - parameter authorization: (header) JWT access token 
     - parameter model: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func updateProfileWithRequestBuilder(authorization: String, model: UpdateProfileViewModel? = nil) -> RequestBuilder<Void> {
        let path = "/v2.0/profile/update"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: model)

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**
     Add or update social links
     
     - parameter authorization: (header) JWT access token 
     - parameter model: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateSocialLinks(authorization: String, model: UpdateSocialLinkViewModel? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        updateSocialLinksWithRequestBuilder(authorization: authorization, model: model).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Add or update social links
     - POST /v2.0/profile/sociallinks/update
     
     - parameter authorization: (header) JWT access token 
     - parameter model: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func updateSocialLinksWithRequestBuilder(authorization: String, model: UpdateSocialLinkViewModel? = nil) -> RequestBuilder<Void> {
        let path = "/v2.0/profile/sociallinks/update"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: model)

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

}
