//
// ProgramMinInvestAmount.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class ProgramMinInvestAmount: Codable {

    public var serverType: BrokerTradeServerType?
    public var minDepositCreateAsset: [AmountWithCurrency]?
    public var minInvestAmountIntoProgram: [AmountWithCurrency]?


    
    public init(serverType: BrokerTradeServerType?, minDepositCreateAsset: [AmountWithCurrency]?, minInvestAmountIntoProgram: [AmountWithCurrency]?) {
        self.serverType = serverType
        self.minDepositCreateAsset = minDepositCreateAsset
        self.minInvestAmountIntoProgram = minInvestAmountIntoProgram
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(serverType, forKey: "serverType")
        try container.encodeIfPresent(minDepositCreateAsset, forKey: "minDepositCreateAsset")
        try container.encodeIfPresent(minInvestAmountIntoProgram, forKey: "minInvestAmountIntoProgram")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        serverType = try container.decodeIfPresent(BrokerTradeServerType.self, forKey: "serverType")
        minDepositCreateAsset = try container.decodeIfPresent([AmountWithCurrency].self, forKey: "minDepositCreateAsset")
        minInvestAmountIntoProgram = try container.decodeIfPresent([AmountWithCurrency].self, forKey: "minInvestAmountIntoProgram")
    }
}

