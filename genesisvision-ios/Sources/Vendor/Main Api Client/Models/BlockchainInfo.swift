//
// BlockchainInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class BlockchainInfo: Codable {

    public enum Status: String, Codable { 
        case undefined = "Undefined"
        case new = "New"
        case pending = "Pending"
        case confirmedByGate = "ConfirmedByGate"
        case confirmedAndValidated = "ConfirmedAndValidated"
        case error = "Error"
        case cancelled = "Cancelled"
    }
    public var hash: String?
    public var status: Status?


    
    public init(hash: String?, status: Status?) {
        self.hash = hash
        self.status = status
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(hash, forKey: "hash")
        try container.encodeIfPresent(status, forKey: "status")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        hash = try container.decodeIfPresent(String.self, forKey: "hash")
        status = try container.decodeIfPresent(Status.self, forKey: "status")
    }
}

