//
// DashboardTradingDetails.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class DashboardTradingDetails: Codable {

    public var equity: Double?
    public var aum: Double?
    public var total: Double?
    public var profits: DashboardProfits?
    public var events: ItemsViewModelInvestmentEventViewModel?


    
    public init(equity: Double?, aum: Double?, total: Double?, profits: DashboardProfits?, events: ItemsViewModelInvestmentEventViewModel?) {
        self.equity = equity
        self.aum = aum
        self.total = total
        self.profits = profits
        self.events = events
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(equity, forKey: "equity")
        try container.encodeIfPresent(aum, forKey: "aum")
        try container.encodeIfPresent(total, forKey: "total")
        try container.encodeIfPresent(profits, forKey: "profits")
        try container.encodeIfPresent(events, forKey: "events")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        equity = try container.decodeIfPresent(Double.self, forKey: "equity")
        aum = try container.decodeIfPresent(Double.self, forKey: "aum")
        total = try container.decodeIfPresent(Double.self, forKey: "total")
        profits = try container.decodeIfPresent(DashboardProfits.self, forKey: "profits")
        events = try container.decodeIfPresent(ItemsViewModelInvestmentEventViewModel.self, forKey: "events")
    }
}

