//
// PlatformNews.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class PlatformNews: Codable {

    public var date: Date?
    public var title: String?
    public var body: String?
    public var logo: String?
    public var url: String?
    public var isHot: Bool?


    
    public init(date: Date?, title: String?, body: String?, logo: String?, url: String?, isHot: Bool?) {
        self.date = date
        self.title = title
        self.body = body
        self.logo = logo
        self.url = url
        self.isHot = isHot
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(date, forKey: "date")
        try container.encodeIfPresent(title, forKey: "title")
        try container.encodeIfPresent(body, forKey: "body")
        try container.encodeIfPresent(logo, forKey: "logo")
        try container.encodeIfPresent(url, forKey: "url")
        try container.encodeIfPresent(isHot, forKey: "isHot")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        date = try container.decodeIfPresent(Date.self, forKey: "date")
        title = try container.decodeIfPresent(String.self, forKey: "title")
        body = try container.decodeIfPresent(String.self, forKey: "body")
        logo = try container.decodeIfPresent(String.self, forKey: "logo")
        url = try container.decodeIfPresent(String.self, forKey: "url")
        isHot = try container.decodeIfPresent(Bool.self, forKey: "isHot")
    }
}

