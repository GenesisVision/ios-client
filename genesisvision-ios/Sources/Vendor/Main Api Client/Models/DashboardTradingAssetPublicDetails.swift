//
// DashboardTradingAssetPublicDetails.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class DashboardTradingAssetPublicDetails: Codable {

    public var logo: String?
    public var color: String?
    public var title: String?
    public var url: String?
    public var programDetails: ProgramAssetDetails?
    public var fundDetails: FundAssetDetails?


    
    public init(logo: String?, color: String?, title: String?, url: String?, programDetails: ProgramAssetDetails?, fundDetails: FundAssetDetails?) {
        self.logo = logo
        self.color = color
        self.title = title
        self.url = url
        self.programDetails = programDetails
        self.fundDetails = fundDetails
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(logo, forKey: "logo")
        try container.encodeIfPresent(color, forKey: "color")
        try container.encodeIfPresent(title, forKey: "title")
        try container.encodeIfPresent(url, forKey: "url")
        try container.encodeIfPresent(programDetails, forKey: "programDetails")
        try container.encodeIfPresent(fundDetails, forKey: "fundDetails")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        logo = try container.decodeIfPresent(String.self, forKey: "logo")
        color = try container.decodeIfPresent(String.self, forKey: "color")
        title = try container.decodeIfPresent(String.self, forKey: "title")
        url = try container.decodeIfPresent(String.self, forKey: "url")
        programDetails = try container.decodeIfPresent(ProgramAssetDetails.self, forKey: "programDetails")
        fundDetails = try container.decodeIfPresent(FundAssetDetails.self, forKey: "fundDetails")
    }
}

