//
// DetachFromSignalProvider.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class DetachFromSignalProvider: Codable {

    public enum Mode: String, Codable { 
        case _none = "None"
        case providerCloseOnly = "ProviderCloseOnly"
        case closeAllImmediately = "CloseAllImmediately"
    }
    public var mode: Mode?


    
    public init(mode: Mode?) {
        self.mode = mode
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(mode, forKey: "mode")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        mode = try container.decodeIfPresent(Mode.self, forKey: "mode")
    }
}

