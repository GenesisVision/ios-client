//
// BinanceRawFuturesOrder.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public struct BinanceRawFuturesOrder: Codable {


    public var accountId: UUID?

    public var symbol: String?

    public var orderId: Int64?

    public var clientOrderId: String?

    public var price: Double?

    public var avgPrice: Double?

    public var reduceOnly: Bool?

    public var closePosition: Bool?

    public var side: BinanceOrderSide?

    public var status: BinanceOrderStatus?

    public var stopPrice: Double?

    public var timeInForce: BinanceTimeInForce?

    public var originalType: BinanceOrderType?

    public var type: BinanceOrderType?

    public var activatePrice: Double?

    public var updateTime: Date?

    public var createdTime: Date?

    public var workingType: BinanceWorkingType?

    public var positionSide: BinancePositionSide?

    public var quantity: Double?

    public var quantityFilled: Double?

    public var quoteQuantityFilled: Double?

    public var callbackRate: Double?

    public var lastFilledQuantity: Double?

    public var commission: Double?

    public var commissionAsset: String?

    public var realizedProfit: Double?
    public init(accountId: UUID? = nil, symbol: String? = nil, orderId: Int64? = nil, clientOrderId: String? = nil, price: Double? = nil, avgPrice: Double? = nil, reduceOnly: Bool? = nil, closePosition: Bool? = nil, side: BinanceOrderSide? = nil, status: BinanceOrderStatus? = nil, stopPrice: Double? = nil, timeInForce: BinanceTimeInForce? = nil, originalType: BinanceOrderType? = nil, type: BinanceOrderType? = nil, activatePrice: Double? = nil, updateTime: Date? = nil, createdTime: Date? = nil, workingType: BinanceWorkingType? = nil, positionSide: BinancePositionSide? = nil, quantity: Double? = nil, quantityFilled: Double? = nil, quoteQuantityFilled: Double? = nil, callbackRate: Double? = nil, lastFilledQuantity: Double? = nil, commission: Double? = nil, commissionAsset: String? = nil, realizedProfit: Double? = nil) { 
        self.accountId = accountId
        self.symbol = symbol
        self.orderId = orderId
        self.clientOrderId = clientOrderId
        self.price = price
        self.avgPrice = avgPrice
        self.reduceOnly = reduceOnly
        self.closePosition = closePosition
        self.side = side
        self.status = status
        self.stopPrice = stopPrice
        self.timeInForce = timeInForce
        self.originalType = originalType
        self.type = type
        self.activatePrice = activatePrice
        self.updateTime = updateTime
        self.createdTime = createdTime
        self.workingType = workingType
        self.positionSide = positionSide
        self.quantity = quantity
        self.quantityFilled = quantityFilled
        self.quoteQuantityFilled = quoteQuantityFilled
        self.callbackRate = callbackRate
        self.lastFilledQuantity = lastFilledQuantity
        self.commission = commission
        self.commissionAsset = commissionAsset
        self.realizedProfit = realizedProfit
    }

}
