//
// BrokerDetails.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class BrokerDetails: Codable {

    public var isForex: Bool?
    public var logo: String?
    public var showSwaps: Bool?
    public var showTickets: Bool?
    public var name: String?


    
    public init(isForex: Bool?, logo: String?, showSwaps: Bool?, showTickets: Bool?, name: String?) {
        self.isForex = isForex
        self.logo = logo
        self.showSwaps = showSwaps
        self.showTickets = showTickets
        self.name = name
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(isForex, forKey: "isForex")
        try container.encodeIfPresent(logo, forKey: "logo")
        try container.encodeIfPresent(showSwaps, forKey: "showSwaps")
        try container.encodeIfPresent(showTickets, forKey: "showTickets")
        try container.encodeIfPresent(name, forKey: "name")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        isForex = try container.decodeIfPresent(Bool.self, forKey: "isForex")
        logo = try container.decodeIfPresent(String.self, forKey: "logo")
        showSwaps = try container.decodeIfPresent(Bool.self, forKey: "showSwaps")
        showTickets = try container.decodeIfPresent(Bool.self, forKey: "showTickets")
        name = try container.decodeIfPresent(String.self, forKey: "name")
    }
}

