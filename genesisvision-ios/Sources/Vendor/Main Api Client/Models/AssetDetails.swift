//
// AssetDetails.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class AssetDetails: Codable {

    public enum AssetType: String, Codable { 
        case _none = "None"
        case programs = "Programs"
        case funds = "Funds"
        case signals = "Signals"
    }
    public var id: UUID?
    public var logo: String?
    public var color: String?
    public var title: String?
    public var url: String?
    public var assetType: AssetType?


    
    public init(id: UUID?, logo: String?, color: String?, title: String?, url: String?, assetType: AssetType?) {
        self.id = id
        self.logo = logo
        self.color = color
        self.title = title
        self.url = url
        self.assetType = assetType
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(logo, forKey: "logo")
        try container.encodeIfPresent(color, forKey: "color")
        try container.encodeIfPresent(title, forKey: "title")
        try container.encodeIfPresent(url, forKey: "url")
        try container.encodeIfPresent(assetType, forKey: "assetType")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        id = try container.decodeIfPresent(UUID.self, forKey: "id")
        logo = try container.decodeIfPresent(String.self, forKey: "logo")
        color = try container.decodeIfPresent(String.self, forKey: "color")
        title = try container.decodeIfPresent(String.self, forKey: "title")
        url = try container.decodeIfPresent(String.self, forKey: "url")
        assetType = try container.decodeIfPresent(AssetType.self, forKey: "assetType")
    }
}

