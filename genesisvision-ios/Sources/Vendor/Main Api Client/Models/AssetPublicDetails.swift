//
// AssetPublicDetails.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class AssetPublicDetails: Codable {

    public var title: String?
    public var description: String?
    public var logo: String?
    public var url: String?
    public var color: String?
    public var creationDate: Date?
    public var status: String?
    public var isOwnAsset: Bool?
    public var typeExt: AssetTypeExt?


    
    public init(title: String?, description: String?, logo: String?, url: String?, color: String?, creationDate: Date?, status: String?, isOwnAsset: Bool?, typeExt: AssetTypeExt?) {
        self.title = title
        self.description = description
        self.logo = logo
        self.url = url
        self.color = color
        self.creationDate = creationDate
        self.status = status
        self.isOwnAsset = isOwnAsset
        self.typeExt = typeExt
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(title, forKey: "title")
        try container.encodeIfPresent(description, forKey: "description")
        try container.encodeIfPresent(logo, forKey: "logo")
        try container.encodeIfPresent(url, forKey: "url")
        try container.encodeIfPresent(color, forKey: "color")
        try container.encodeIfPresent(creationDate, forKey: "creationDate")
        try container.encodeIfPresent(status, forKey: "status")
        try container.encodeIfPresent(isOwnAsset, forKey: "isOwnAsset")
        try container.encodeIfPresent(typeExt, forKey: "typeExt")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        title = try container.decodeIfPresent(String.self, forKey: "title")
        description = try container.decodeIfPresent(String.self, forKey: "description")
        logo = try container.decodeIfPresent(String.self, forKey: "logo")
        url = try container.decodeIfPresent(String.self, forKey: "url")
        color = try container.decodeIfPresent(String.self, forKey: "color")
        creationDate = try container.decodeIfPresent(Date.self, forKey: "creationDate")
        status = try container.decodeIfPresent(String.self, forKey: "status")
        isOwnAsset = try container.decodeIfPresent(Bool.self, forKey: "isOwnAsset")
        typeExt = try container.decodeIfPresent(AssetTypeExt.self, forKey: "typeExt")
    }
}

