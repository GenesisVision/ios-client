//
// PartnershipDetails.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class PartnershipDetails: Codable {

    public var totalReferralsL1: Int?
    public var totalReferralsL2: Int?
    public var totalAmount: Double?


    
    public init(totalReferralsL1: Int?, totalReferralsL2: Int?, totalAmount: Double?) {
        self.totalReferralsL1 = totalReferralsL1
        self.totalReferralsL2 = totalReferralsL2
        self.totalAmount = totalAmount
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(totalReferralsL1, forKey: "totalReferralsL1")
        try container.encodeIfPresent(totalReferralsL2, forKey: "totalReferralsL2")
        try container.encodeIfPresent(totalAmount, forKey: "totalAmount")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        totalReferralsL1 = try container.decodeIfPresent(Int.self, forKey: "totalReferralsL1")
        totalReferralsL2 = try container.decodeIfPresent(Int.self, forKey: "totalReferralsL2")
        totalAmount = try container.decodeIfPresent(Double.self, forKey: "totalAmount")
    }
}

