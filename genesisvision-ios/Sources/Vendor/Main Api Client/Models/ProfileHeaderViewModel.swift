//
// ProfileHeaderViewModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public struct ProfileHeaderViewModel: Codable {


    public var _id: UUID?

    public var name: String?

    public var email: String?

    public var url: String?

    public var logoUrl: String?

    public var countryCode: String?

    public var notificationsCount: Int?

    public var isKycConfirmed: Bool?

    public var isForexAllowed: Bool?

    public var isCountryUS: Bool?

    public var isTwoFactorEnabled: Bool?

    public var isNewUser: Bool?

    public var isPublicInvestor: Bool?

    public var hasPassword: Bool?

    public var hasEmailAddress: Bool?

    public var betaTester: [BetaTestingType]?

    public var isUserNameFilled: Bool?

    public var platformCurrency: Currency?
    public init(_id: UUID? = nil, name: String? = nil, email: String? = nil, url: String? = nil, logoUrl: String? = nil, countryCode: String? = nil, notificationsCount: Int? = nil, isKycConfirmed: Bool? = nil, isForexAllowed: Bool? = nil, isCountryUS: Bool? = nil, isTwoFactorEnabled: Bool? = nil, isNewUser: Bool? = nil, isPublicInvestor: Bool? = nil, hasPassword: Bool? = nil, hasEmailAddress: Bool? = nil, betaTester: [BetaTestingType]? = nil, isUserNameFilled: Bool? = nil, platformCurrency: Currency? = nil) { 
        self._id = _id
        self.name = name
        self.email = email
        self.url = url
        self.logoUrl = logoUrl
        self.countryCode = countryCode
        self.notificationsCount = notificationsCount
        self.isKycConfirmed = isKycConfirmed
        self.isForexAllowed = isForexAllowed
        self.isCountryUS = isCountryUS
        self.isTwoFactorEnabled = isTwoFactorEnabled
        self.isNewUser = isNewUser
        self.isPublicInvestor = isPublicInvestor
        self.hasPassword = hasPassword
        self.hasEmailAddress = hasEmailAddress
        self.betaTester = betaTester
        self.isUserNameFilled = isUserNameFilled
        self.platformCurrency = platformCurrency
    }
    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case name
        case email
        case url
        case logoUrl
        case countryCode
        case notificationsCount
        case isKycConfirmed
        case isForexAllowed
        case isCountryUS
        case isTwoFactorEnabled
        case isNewUser
        case isPublicInvestor
        case hasPassword
        case hasEmailAddress
        case betaTester
        case isUserNameFilled
        case platformCurrency
    }

}
