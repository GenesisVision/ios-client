//
// BinanceRawOrder.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public struct BinanceRawOrder: Codable {


    public var accountId: UUID?

    public var symbol: String?

    public var clientOrderId: String?

    public var side: BinanceOrderSide?

    public var type: BinanceOrderType?

    public var timeInForce: BinanceTimeInForce?

    public var quantity: Double?

    public var price: Double?

    public var stopPrice: Double?

    public var icebergQuantity: Double?

    public var originalClientOrderId: String?

    public var executionType: BinanceExecutionType?

    public var status: BinanceOrderStatus?

    public var rejectReason: BinanceOrderRejectReason?

    public var orderId: Int64?

    public var lastQuantityFilled: Double?

    public var quantityFilled: Double?

    public var lastPriceFilled: Double?

    public var commission: Double?

    public var commissionAsset: String?

    public var updateTime: Date?

    public var tradeId: Int64?

    public var isWorking: Bool?

    public var buyerIsMaker: Bool?

    public var createTime: Date?

    public var quoteQuantityFilled: Double?

    public var quoteQuantity: Double?

    public var lastQuoteQuantity: Double?

    public var orderListId: Int64?

    public var pnL: Double?
    public init(accountId: UUID? = nil, symbol: String? = nil, clientOrderId: String? = nil, side: BinanceOrderSide? = nil, type: BinanceOrderType? = nil, timeInForce: BinanceTimeInForce? = nil, quantity: Double? = nil, price: Double? = nil, stopPrice: Double? = nil, icebergQuantity: Double? = nil, originalClientOrderId: String? = nil, executionType: BinanceExecutionType? = nil, status: BinanceOrderStatus? = nil, rejectReason: BinanceOrderRejectReason? = nil, orderId: Int64? = nil, lastQuantityFilled: Double? = nil, quantityFilled: Double? = nil, lastPriceFilled: Double? = nil, commission: Double? = nil, commissionAsset: String? = nil, updateTime: Date? = nil, tradeId: Int64? = nil, isWorking: Bool? = nil, buyerIsMaker: Bool? = nil, createTime: Date? = nil, quoteQuantityFilled: Double? = nil, quoteQuantity: Double? = nil, lastQuoteQuantity: Double? = nil, orderListId: Int64? = nil, pnL: Double? = nil) { 
        self.accountId = accountId
        self.symbol = symbol
        self.clientOrderId = clientOrderId
        self.side = side
        self.type = type
        self.timeInForce = timeInForce
        self.quantity = quantity
        self.price = price
        self.stopPrice = stopPrice
        self.icebergQuantity = icebergQuantity
        self.originalClientOrderId = originalClientOrderId
        self.executionType = executionType
        self.status = status
        self.rejectReason = rejectReason
        self.orderId = orderId
        self.lastQuantityFilled = lastQuantityFilled
        self.quantityFilled = quantityFilled
        self.lastPriceFilled = lastPriceFilled
        self.commission = commission
        self.commissionAsset = commissionAsset
        self.updateTime = updateTime
        self.tradeId = tradeId
        self.isWorking = isWorking
        self.buyerIsMaker = buyerIsMaker
        self.createTime = createTime
        self.quoteQuantityFilled = quoteQuantityFilled
        self.quoteQuantity = quoteQuantity
        self.lastQuoteQuantity = lastQuoteQuantity
        self.orderListId = orderListId
        self.pnL = pnL
    }

}
