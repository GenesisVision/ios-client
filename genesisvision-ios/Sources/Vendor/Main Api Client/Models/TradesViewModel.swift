//
// TradesViewModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class TradesViewModel: Codable {

    public enum TradesType: String, Codable { 
        case positions = "Positions"
        case orders = "Orders"
    }
    public var tradesType: TradesType?
    public var trades: [OrderModel]?
    public var total: Int?


    
    public init(tradesType: TradesType?, trades: [OrderModel]?, total: Int?) {
        self.tradesType = tradesType
        self.trades = trades
        self.total = total
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(tradesType, forKey: "tradesType")
        try container.encodeIfPresent(trades, forKey: "trades")
        try container.encodeIfPresent(total, forKey: "total")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        tradesType = try container.decodeIfPresent(TradesType.self, forKey: "tradesType")
        trades = try container.decodeIfPresent([OrderModel].self, forKey: "trades")
        total = try container.decodeIfPresent(Int.self, forKey: "total")
    }
}

